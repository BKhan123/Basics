//Example to show how we can create a derived class with base class construuctors.

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace Solution
{

    public class Team
    {
        public  string teamName;
        public  int noOfPlayers;
        public Team(string name, int players)
        {
           teamName = name;
           noOfPlayers = players;
        }
        public void AddPlayer(int count)
        {
            noOfPlayers = count + noOfPlayers;
        }
        public bool RemovePlayer(int count)
        {
            noOfPlayers = noOfPlayers - count;
            if (noOfPlayers < 0)
            {
                return false;
            }
            else
            {
                return true;
            }

        }

    }

    public class Subteam : Team
    {
        public Subteam(string tn, int np) : base(tn, np)
        {
                teamName = tn;
                noOfPlayers = np;
        }

    }
    class Solution
    {
        static void Main1(string[] args)
        {

            

            String str = Console.ReadLine();
            String[] strArr = str.Split();
            string initialName = strArr[0];
            int count = Convert.ToInt32(strArr[1]);
            //Team teamObj = new Team(initialName, count);
            Subteam teamObj = new Subteam(initialName, count);
            Console.WriteLine("Team " + teamObj.teamName + " created");

            str = Console.ReadLine();
            count = Convert.ToInt32(str);
            Console.WriteLine("Current number of players in team " + teamObj.teamName + " is " + teamObj.noOfPlayers);
            teamObj.AddPlayer(count);
            Console.WriteLine("New number of players in team " + teamObj.teamName + " is " + teamObj.noOfPlayers);


            str = Console.ReadLine();
            count = Convert.ToInt32(str);
            Console.WriteLine("Current number of players in team " + teamObj.teamName + " is " + teamObj.noOfPlayers);
            var res = teamObj.RemovePlayer(count);
            if (res)
            {
                Console.WriteLine("New number of players in team " + teamObj.teamName + " is " + teamObj.noOfPlayers);
            }
            else
            {
                Console.WriteLine("Number of players in team " + teamObj.teamName + " remains same");
            }

         }
    }
}
